program
$testbranch
@;
procedure
$reached
@;
var
$x
@,
$y
@:
$integer
@;
begin
$x
@:=
#1
@;
$y
@:=
#2
@-
$x
@;
if
$x
@<>
$y
then
begin
$unreached
@;
$write
@(
'bar'
@)
@;
end
@;
$writeln
@(
'foo'
@)
@;
end
@;
procedure
$unreached
@;
begin
end
@;
procedure
$branchingforms
@;
var
$x
@,
$y
@,
$z
@,
$a
@,
$b
@,
$c
@:
$integer
@;
$bb
@:
$boolean
@;
begin
if
@(
$x
@<
$y
@)
and
@(
$y
@<
$z
@)
then
$bb
@:=
$true
@;
while
@(
$a
@<>
$b
@)
or
@(
$z
@=
#0
@)
do
$x
@:=
$x
@+
#1
@;
repeat
$z
@:=
$z
@+
#2
@;
until
not
@(
@(
$a
@=
$b
@)
or
@(
$y
@<>
$z
@)
or
$bb
@)
@;
end
@;
var
$z
@:
$integer
@;
begin
$z
@:=
#0
@;
$reached
@;
if
$z
@<>
#0
then
if
$z
@<>
#1
then
$z
@:=
#2
else
$z
@:=
#3
else
if
$z
@<>
#4
then
$z
@:=
#5
else
$z
@:=
#6
@;
while
$false
do
$z
@:=
$z
@+
#1
@;
$z
@:=
$z
@+
#100
@;
end
@.
EOF
EOF
