testb2.parse:
1,78d0
< (program: 
<   (decls: 
<     (decl->program: stmt[1]))
<   (block: 
<     (decls: 
<       (decl->variable: int[3]
<         (type->kind=ident: integer[3]))
<       (decl->variable: bol[4]
<         (type->kind=ident: boolean[4]))
<       (decl->variable: d[5]
<         (type->kind=ident: integer[5]))
<       (decl->variable: c[5]
<         (type->kind=ident: integer[5]))
<       (decl->const: r[6]
<         (expr->[value=2] int: 2
<           type->(type->kind=integer))))
<     (stmts: 
<       (stmt->casestmt:
<         (expr-> binding: r[10])
<         (caselist: 
<           (labellist: 
<             (expr->[value=1] int: 1
<               type->(type->kind=integer)))
<           (stmt->emptystmt:)
<           (labellist: 
<             (expr->[value=2] int: 2
<               type->(type->kind=integer)))
<           (stmt->assignstmt:
<             (expr-> binding: bol[12])
<             (expr-> binexp: and
<               (expr-> binexp: <>
<                 (expr-> binding: true[12])
<                 (expr-> binding: false[12]))
<               (expr-> binding: true[12])))
<           (labellist: 
<             (expr->[value=3] int: 3
<               type->(type->kind=integer)))
<           (stmt->emptystmt:)))
<       (stmt->assignstmt:
<         (expr-> binding: c[16])
<         (expr->[value=43] int: 43
<           type->(type->kind=integer)))
<       (stmt->assignstmt:
<         (expr-> binding: d[17])
<         (expr->[value=1] int: 1
<           type->(type->kind=integer)))
<       (stmt->repeatstmt:
<         (expr-> binexp: =
<           (expr-> binding: d[21])
<           (expr->[value=4] int: 4
<             type->(type->kind=integer)))
<         (stmts: 
<           (stmt->assignstmt:
<             (expr-> binding: int[19])
<             (expr-> binexp: +
<               (expr-> binexp: *
<                 (expr->[value=234] int: 234
<                   type->(type->kind=integer))
<                 (expr-> binding: c[19]))
<               (expr-> binexp: div
<                 (expr-> binexp: -
<                   (expr-> binding: c[19])
<                   (expr->[value=6] int: 6
<                     type->(type->kind=integer)))
<                 (expr-> binexp: +
<                   (expr-> binding: d[19])
<                   (expr-> binexp: *
<                     (expr->[value=5] int: 5
<                       type->(type->kind=integer))
<                     (expr-> binding: c[19]))))))
<           (stmt->assignstmt:
<             (expr-> binding: d[20])
<             (expr-> binexp: +
<               (expr-> binding: d[20])
<               (expr->[value=1] int: 1
<                 type->(type->kind=integer))))
<           (stmt->emptystmt:)))
<       (stmt->emptystmt:))))


