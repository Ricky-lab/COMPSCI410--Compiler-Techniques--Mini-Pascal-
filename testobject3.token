program
$testobject3;

type
$object1
$= integer
object
methods
procedure
$add
$(elf
@:
$object1; x
@:
$integer); end;

$object2
$= object3
object
overrides
$method
$= object2method
$end;

$object3
$= object
$x
@:
$integer
methods
procedure
$method
$(elf
@:
$object3)
$= object3method;

$end;

$object4
$= object
$x
@:
$integer;

methods
function
$multiply
$(elf
@:
$object4; x
@:
$integer)
@:
$object4;

$end;

$object5
$= object4
object
overrides
$multiply
$= object5multiply
$end;

$object6
$= object4
abstract
object
overrides
$multiply
$= object6multiply
$end;

$object7
$= object6
object
methods
function
$add
$(elf
@:
$object7; var
$x
@:
$integer)
@:
$object7
$= object7add;

$end;
var
$o1
@:
$object1;

$o2
@:
$object2;

$o3
@:
$object3;

$o4
@:
$object4;

$o5
@:
$object5;

$o6
@:
$object6;

$o7
@:
$object7;

procedure
$object2method
$(elf
@:
$object2);

begin
$writeln
