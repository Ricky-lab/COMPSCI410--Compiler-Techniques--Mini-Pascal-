testobject4.err:
0a1,9
> Exception occurred:
> java.lang.IllegalStateException: Operator was not found in the operator table: (elf.
> 	at MPC.TokenOp.get(TokenOp.java:89)
> 	at MPC.MPCScanner.next_token(MPCScanner.java:505)
> 	at java_cup.runtime.lr_parser.scan(lr_parser.java:349)
> 	at java_cup.runtime.lr_parser.parse(lr_parser.java:578)
> 	at MPC.Parse.perform(Parse.java:45)
> 	at MPC.mpc.main(mpc.java:245)
> Aborting ...


testobject4.token:
2,3c2,3
< $testobject4
< @;
---
> $testobject4;
> 
6,7c6
< @=
< abstract
---
> $= abstract
12,13c11
< @(
< $self
---
> $(elf
15,17c13
< $hasequals
< @;
< $other
---
> $hasequals; other
19,20c15
< $root
< @)
---
> $root)
22,25c17,20
< $boolean
< @;
< end
< @;
---
> $boolean;
> 
> $end;
> 
27,28c22
< @=
< abstract
---
> $= abstract
33,34c27
< @(
< $self
---
> $(elf
36,37c29
< $iterator
< @)
---
> $iterator)
39,40c31,32
< $root
< @;
---
> $root;
> 
43,44c35
< @(
< $self
---
> $(elf
46,47c37
< $iterator
< @)
---
> $iterator)
49,50c39,40
< $boolean
< @;
---
> $boolean;
> 
53,54c43
< @(
< $self
---
> $(elf
56,60c45,48
< $iterator
< @)
< @;
< end
< @;
---
> $iterator);
> 
> $end;
> 
62,63c50
< @=
< abstract
---
> $= abstract
68,69c55
< @(
< $self
---
> $(elf
71,72c57
< $iterable
< @)
---
> $iterable)
74,77c59,62
< $iterator
< @;
< end
< @;
---
> $iterator;
> 
> $end;
> 
79,80c64
< @=
< $iterable
---
> $= iterable
84c68
< function
---
> $(* *function
86,87c70
< @(
< $self
---
> $(elf
89,90c72
< $collection
< @)
---
> $collection)
92,93c74,75
< $integer
< @;
---
> $integer;
> 
96,97c78
< @(
< $self
---
> $(elf
99,100c80
< $collection
< @)
---
> $collection)
102,104c82,84
< $boolean
< @;
< function
---
> $boolean;
> 
> $(* *function
106,107c86
< @(
< $self
---
> $(elf
109,111c88
< $collection
< @;
< $o
---
> $collection; o
113,114c90
< $hasequals
< @)
---
> $hasequals)
116,117c92,93
< $boolean
< @;
---
> $boolean;
> 
120,121c96
< @(
< $self
---
> $(elf
123,125c98
< $collection
< @;
< $o
---
> $collection; o
127,128c100
< $hasequals
< @)
---
> $hasequals)
130,131c102,103
< $boolean
< @;
---
> $boolean;
> 
134,135c106
< @(
< $self
---
> $(elf
137,139c108
< $collection
< @;
< $o
---
> $collection; o
141,142c110
< $hasequals
< @)
---
> $hasequals)
144,146c112,114
< $boolean
< @;
< procedure
---
> $boolean;
> 
> $(* *procedure
148,149c116
< @(
< $self
---
> $(elf
151,153c118,119
< $collection
< @)
< @;
---
> $collection);
> 
156,159c122,123
< @(
< $self
< @,
< $other
---
> $(elf
> $, other
161,162c125
< $collection
< @)
---
> $collection)
164,165c127,128
< $boolean
< @;
---
> $boolean;
> 
168,171c131,132
< @(
< $self
< @,
< $other
---
> $(elf
> $, other
173,174c134
< $collection
< @)
---
> $collection)
176,177c136,137
< $boolean
< @;
---
> $boolean;
> 
180,183c140,141
< @(
< $self
< @,
< $other
---
> $(elf
> $, other
185,186c143
< $collection
< @)
---
> $collection)
188,189c145,146
< $boolean
< @;
---
> $boolean;
> 
192,195c149,150
< @(
< $self
< @,
< $other
---
> $(elf
> $, other
197,198c152
< $collection
< @)
---
> $collection)
200,201c154,155
< $boolean
< @;
---
> $boolean;
> 
204,207c158,159
< @(
< $self
< @,
< $other
---
> $(elf
> $, other
209,210c161
< $collection
< @)
---
> $collection)
212,215c163,166
< $boolean
< @;
< end
< @;
---
> $boolean;
> 
> $end;
> 
218,219c169
< @=
< $collection
---
> $= collection
224,226c174,175
< @=
< $acisempty
< @;
---
> $= acisempty;
> 
228,230c177,178
< @=
< $accontains
< @;
---
> $= accontains;
> 
232,234c180,181
< @=
< $acclear
< @;
---
> $= acclear;
> 
236,238c183,184
< @=
< $acaddall
< @;
---
> $= acaddall;
> 
240,242c186,187
< @=
< $accontainsall
< @;
---
> $= accontainsall;
> 
244,246c189,190
< @=
< $acremoveall
< @;
---
> $= acremoveall;
> 
248,252c192,195
< @=
< $acretainall
< @;
< end
< @;
---
> $= acretainall;
> 
> $end;
> 
255,256c198
< @(
< $self
---
> $(elf
258,259c200
< $abscoll
< @)
---
> $abscoll)
261,262c202
< $boolean
< @;
---
> $boolean;
265,4618c205
< @:=
< @(
< $self
< @.
< $size
< @=
< #0
< @)
< @;
< end
< @;
< function
< $accontains
< @(
< $self
< @:
< $abscoll
< @;
< $item
< @:
< $hasequals
< @)
< @:
< $boolean
< @;
< var
< $it
< @:
< $iterator
< @;
< $searching
< @:
< $boolean
< @;
< begin
< $accontains
< @:=
< $false
< @;
< $searching
< @:=
< $true
< @;
< $it
< @:=
< $self
< @.
< $getiterator
< @;
< while
< $searching
< do
< begin
< if
< $it
< @.
< $hasnext
< then
< begin
< if
< $narrow
< @(
< $it
< @.
< $next
< @,
< $hasequals
< @)
< @.
< $equals
< @(
< $item
< @)
< then
< begin
< $accontains
< @:=
< $true
< @;
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< else
< begin
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< @;
< end
< @;
< procedure
< $acclear
< @(
< $self
< @:
< $abscoll
< @)
< @;
< var
< $it
< @:
< $iterator
< @;
< $o
< @:
< $root
< @;
< begin
< $it
< @:=
< $self
< @.
< $getiterator
< @;
< while
< $it
< @.
< $hasnext
< do
< begin
< $o
< @:=
< $it
< @.
< $next
< @;
< $it
< @.
< $remove
< @;
< end
< @;
< end
< @;
< function
< $acaddall
< @(
< $self
< @:
< $abscoll
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @;
< var
< $it
< @:
< $iterator
< @;
< begin
< $it
< @:=
< $other
< @.
< $getiterator
< @;
< $acaddall
< @:=
< $false
< @;
< while
< $it
< @.
< $hasnext
< do
< begin
< if
< $self
< @.
< $add
< @(
< $narrow
< @(
< $it
< @.
< $next
< @,
< $hasequals
< @)
< @)
< then
< begin
< $acaddall
< @:=
< $true
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $accontainsall
< @(
< $self
< @:
< $abscoll
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @;
< var
< $it
< @:
< $iterator
< @;
< $searching
< @:
< $boolean
< @;
< begin
< $accontainsall
< @:=
< $true
< @;
< $searching
< @:=
< $true
< @;
< $it
< @:=
< $other
< @.
< $getiterator
< @;
< while
< $searching
< do
< begin
< if
< $it
< @.
< $hasnext
< then
< begin
< if
< not
< $self
< @.
< $contains
< @(
< $narrow
< @(
< $it
< @.
< $next
< @,
< $hasequals
< @)
< @)
< then
< begin
< $accontainsall
< @:=
< $false
< @;
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $acremoveall
< @(
< $self
< @:
< $abscoll
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @;
< var
< $it
< @:
< $iterator
< @;
< begin
< $it
< @:=
< $other
< @.
< $getiterator
< @;
< $acremoveall
< @:=
< $false
< @;
< while
< $it
< @.
< $hasnext
< do
< begin
< if
< $self
< @.
< $remove
< @(
< $narrow
< @(
< $it
< @.
< $next
< @,
< $hasequals
< @)
< @)
< then
< begin
< $acremoveall
< @:=
< $true
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $acretainall
< @(
< $self
< @:
< $abscoll
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @;
< var
< $it
< @:
< $iterator
< @;
< begin
< $it
< @:=
< $self
< @.
< $getiterator
< @;
< $acretainall
< @:=
< $false
< @;
< while
< $it
< @.
< $hasnext
< do
< begin
< if
< not
< $other
< @.
< $contains
< @(
< $narrow
< @(
< $it
< @.
< $next
< @,
< $hasequals
< @)
< @)
< then
< begin
< $it
< @.
< $remove
< @;
< $acretainall
< @:=
< $true
< @;
< end
< @;
< end
< @;
< end
< @;
< type
< $listiterator
< @=
< $iterator
< abstract
< object
< methods
< procedure
< $add
< @(
< $self
< @:
< $listiterator
< @;
< $o
< @:
< $root
< @)
< @;
< procedure
< $set
< @(
< $self
< @:
< $listiterator
< @;
< $o
< @:
< $root
< @)
< @;
< function
< $nextindex
< @(
< $self
< @:
< $listiterator
< @)
< @:
< $integer
< @;
< function
< $hasprevious
< @(
< $self
< @:
< $listiterator
< @)
< @:
< $boolean
< @;
< function
< $previous
< @(
< $self
< @:
< $listiterator
< @)
< @:
< $root
< @;
< function
< $previousindex
< @(
< $self
< @:
< $listiterator
< @)
< @:
< $integer
< @;
< end
< @;
< $abslist
< @=
< $abscoll
< abstract
< object
< methods
< function
< $addith
< @(
< $self
< @:
< $abslist
< @;
< $index
< @:
< $integer
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $boolean
< @;
< function
< $getith
< @(
< $self
< @:
< $abslist
< @;
< $index
< @:
< $integer
< @)
< @:
< $hasequals
< @;
< function
< $removeith
< @(
< $self
< @:
< $abslist
< @;
< $index
< @:
< $integer
< @)
< @:
< $boolean
< @;
< function
< $setith
< @(
< $self
< @:
< $abslist
< @;
< $index
< @:
< $integer
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $hasequals
< @;
< function
< $indexof
< @(
< $self
< @:
< $abslist
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $integer
< @=
< $alindexof
< @;
< function
< $lastindexof
< @(
< $self
< @:
< $abslist
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $integer
< @=
< $allastindexof
< @;
< function
< $getlistiterator
< @(
< $self
< @:
< $abslist
< @)
< @:
< $listiterator
< @=
< $algetlistiterator
< @;
< function
< $getlistiteratorith
< @(
< $self
< @:
< $abslist
< @;
< $index
< @:
< $integer
< @)
< @:
< $listiterator
< @=
< $algetlistiteratorith
< @;
< function
< $removerange
< @(
< $self
< @:
< $abslist
< @;
< $fromindex
< @,
< $toindex
< @:
< $integer
< @)
< @:
< $boolean
< @=
< $alremoverange
< @;
< function
< $addallith
< @(
< $self
< @:
< $abslist
< @;
< $index
< @:
< $integer
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @=
< $aladdallith
< @;
< overrides
< $add
< @=
< $aladd
< @;
< $clear
< @=
< $alclear
< @;
< $equals
< @=
< $alequals
< @;
< $getiterator
< @=
< $algetiterator
< @;
< end
< @;
< $alitr
< @=
< $iterator
< object
< $cursor
< @:
< $integer
< @;
< $lastret
< @:
< $integer
< @;
< $thelist
< @:
< $abslist
< @;
< methods
< function
< $init
< @(
< $self
< @:
< $alitr
< @;
< $lst
< @:
< $abslist
< @)
< @:
< $alitr
< @=
< $aliinit
< @;
< overrides
< $hasnext
< @=
< $alihasnext
< @;
< $next
< @=
< $alinext
< @;
< $remove
< @=
< $aliremove
< @;
< end
< @;
< $allstitr
< @=
< $listiterator
< object
< $cursor
< @:
< $integer
< @;
< $lastret
< @:
< $integer
< @;
< $thelist
< @:
< $abslist
< @;
< methods
< function
< $init
< @(
< $self
< @:
< $allstitr
< @;
< $index
< @:
< $integer
< @;
< $lst
< @:
< $abslist
< @)
< @:
< $allstitr
< @=
< $alliinit
< @;
< overrides
< $hasnext
< @=
< $allihasnext
< @;
< $next
< @=
< $allinext
< @;
< $nextindex
< @=
< $allinextindex
< @;
< $hasprevious
< @=
< $allihasprevious
< @;
< $previous
< @=
< $alliprevious
< @;
< $previousindex
< @=
< $allipreviousindex
< @;
< $set
< @=
< $alliset
< @;
< $add
< @=
< $alliadd
< @;
< $remove
< @=
< $alliremove
< @;
< end
< @;
< function
< $aladd
< @(
< $self
< @:
< $abslist
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $boolean
< @;
< begin
< $aladd
< @:=
< $self
< @.
< $addith
< @(
< $self
< @.
< $size
< @,
< $o
< @)
< @;
< end
< @;
< function
< $alindexof
< @(
< $self
< @:
< $abslist
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $integer
< @;
< var
< $it
< @:
< $listiterator
< @;
< $searching
< @:
< $boolean
< @;
< begin
< $it
< @:=
< $self
< @.
< $getlistiterator
< @;
< $alindexof
< @:=
< @-
< #1
< @;
< $searching
< @:=
< $true
< @;
< while
< $searching
< do
< begin
< if
< $it
< @.
< $hasnext
< then
< begin
< if
< $o
< @.
< $equals
< @(
< $it
< @.
< $next
< @)
< then
< begin
< $alindexof
< @:=
< $it
< @.
< $previousindex
< @;
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< else
< begin
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $allastindexof
< @(
< $self
< @:
< $abslist
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $integer
< @;
< var
< $it
< @:
< $listiterator
< @;
< $searching
< @:
< $boolean
< @;
< begin
< $it
< @:=
< $self
< @.
< $getlistiteratorith
< @(
< $self
< @.
< $size
< @)
< @;
< $allastindexof
< @:=
< @-
< #1
< @;
< $searching
< @:=
< $true
< @;
< while
< $searching
< do
< begin
< if
< $it
< @.
< $hasprevious
< then
< begin
< if
< $o
< @.
< $equals
< @(
< $it
< @.
< $previous
< @)
< then
< begin
< $allastindexof
< @:=
< $it
< @.
< $nextindex
< @;
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< else
< begin
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< @;
< end
< @;
< procedure
< $alclear
< @(
< $self
< @:
< $abslist
< @)
< @;
< var
< $b
< @:
< $boolean
< @;
< begin
< $b
< @:=
< $self
< @.
< $removerange
< @(
< #0
< @,
< $self
< @.
< $size
< @)
< @;
< end
< @;
< function
< $aladdallith
< @(
< $self
< @:
< $abslist
< @;
< $index
< @:
< $integer
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @;
< var
< $it
< @:
< $iterator
< @;
< $b
< @:
< $boolean
< @;
< begin
< $aladdallith
< @:=
< $false
< @;
< if
< @(
< $index
< @>=
< #0
< @)
< and
< @(
< $index
< @<=
< $self
< @.
< $size
< @)
< then
< begin
< $it
< @:=
< $other
< @.
< $getiterator
< @;
< while
< $it
< @.
< $hasnext
< do
< begin
< $b
< @:=
< $self
< @.
< $addith
< @(
< $index
< @,
< $narrow
< @(
< $it
< @.
< $next
< @,
< $hasequals
< @)
< @)
< @;
< $index
< @:=
< $index
< @+
< #1
< @;
< $aladdallith
< @:=
< $true
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $algetiterator
< @(
< $self
< @:
< $abslist
< @)
< @:
< $iterator
< @;
< begin
< $algetiterator
< @:=
< $new
< @(
< $alitr
< @)
< @.
< $init
< @(
< $self
< @)
< @;
< end
< @;
< function
< $algetlistiterator
< @(
< $self
< @:
< $abslist
< @)
< @:
< $listiterator
< @;
< begin
< $algetlistiterator
< @:=
< $self
< @.
< $getlistiteratorith
< @(
< #0
< @)
< @;
< end
< @;
< function
< $algetlistiteratorith
< @(
< $self
< @:
< $abslist
< @;
< $index
< @:
< $integer
< @)
< @:
< $listiterator
< @;
< begin
< $algetlistiteratorith
< @:=
< $new
< @(
< $allstitr
< @)
< @.
< $init
< @(
< $index
< @,
< $self
< @)
< @;
< end
< @;
< function
< $alremoverange
< @(
< $self
< @:
< $abslist
< @;
< $fromindex
< @,
< $toindex
< @:
< $integer
< @)
< @:
< $boolean
< @;
< var
< $it
< @:
< $listiterator
< @;
< $i
< @:
< $integer
< @;
< $o
< @:
< $root
< @;
< begin
< $it
< @:=
< $self
< @.
< $getlistiteratorith
< @(
< $fromindex
< @)
< @;
< for
< $i
< @:=
< #0
< to
< @(
< $toindex
< @-
< $fromindex
< @-
< #1
< @)
< do
< begin
< $o
< @:=
< $it
< @.
< $next
< @;
< $it
< @.
< $remove
< @;
< end
< @;
< end
< @;
< function
< $alequals
< @(
< $self
< @:
< $abslist
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @;
< var
< $it1
< @,
< $it2
< @:
< $iterator
< @;
< $searching
< @:
< $boolean
< @;
< $o1
< @,
< $o2
< @:
< $hasequals
< @;
< begin
< if
< $self
< @=
< $other
< then
< begin
< $alequals
< @:=
< $true
< @;
< end
< else
< if
< not
< $istype
< @(
< $other
< @,
< $abslist
< @)
< then
< begin
< $alequals
< @:=
< $false
< @;
< end
< else
< begin
< $it1
< @:=
< $self
< @.
< $getiterator
< @;
< $it2
< @:=
< $other
< @.
< $getiterator
< @;
< $searching
< @:=
< $true
< @;
< $alequals
< @:=
< $true
< @;
< while
< $searching
< do
< begin
< if
< $it1
< @.
< $hasnext
< and
< $it2
< @.
< $hasnext
< then
< begin
< $o1
< @:=
< $narrow
< @(
< $it1
< @.
< $next
< @,
< $hasequals
< @)
< @;
< $o2
< @:=
< $narrow
< @(
< $it2
< @.
< $next
< @,
< $hasequals
< @)
< @;
< if
< not
< $o1
< @.
< $equals
< @(
< $o2
< @)
< then
< begin
< $alequals
< @:=
< $false
< @;
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< else
< begin
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< @;
< if
< $it1
< @.
< $hasnext
< or
< $it2
< @.
< $hasnext
< then
< begin
< $alequals
< @:=
< $false
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $aliinit
< @(
< $self
< @:
< $alitr
< @;
< $lst
< @:
< $abslist
< @)
< @:
< $alitr
< @;
< begin
< $self
< @.
< $cursor
< @:=
< #0
< @;
< $self
< @.
< $lastret
< @:=
< @-
< #1
< @;
< $self
< @.
< $thelist
< @:=
< $lst
< @;
< $aliinit
< @:=
< $self
< @;
< end
< @;
< function
< $alihasnext
< @(
< $self
< @:
< $alitr
< @)
< @:
< $boolean
< @;
< begin
< $alihasnext
< @:=
< @(
< $self
< @.
< $cursor
< @<>
< $self
< @.
< $thelist
< @.
< $size
< @)
< @;
< end
< @;
< function
< $alinext
< @(
< $self
< @:
< $alitr
< @)
< @:
< $root
< @;
< begin
< if
< $self
< @.
< $cursor
< @>=
< $self
< @.
< $thelist
< @.
< $size
< then
< begin
< $alinext
< @:=
< nil
< @;
< end
< else
< begin
< $alinext
< @:=
< $self
< @.
< $thelist
< @.
< $getith
< @(
< $self
< @.
< $cursor
< @)
< @;
< $self
< @.
< $lastret
< @:=
< $self
< @.
< $cursor
< @;
< $self
< @.
< $cursor
< @:=
< $self
< @.
< $cursor
< @+
< #1
< @;
< end
< @;
< end
< @;
< procedure
< $aliremove
< @(
< $self
< @:
< $alitr
< @)
< @;
< var
< $b
< @:
< $boolean
< @;
< begin
< if
< $self
< @.
< $lastret
< @>=
< #0
< then
< begin
< $b
< @:=
< $self
< @.
< $thelist
< @.
< $removeith
< @(
< $self
< @.
< $lastret
< @)
< @;
< if
< $self
< @.
< $lastret
< @<
< $self
< @.
< $cursor
< then
< begin
< $self
< @.
< $cursor
< @:=
< $self
< @.
< $cursor
< @-
< #1
< @;
< end
< @;
< $self
< @.
< $lastret
< @:=
< @-
< #1
< @;
< end
< @;
< end
< @;
< function
< $alliinit
< @(
< $self
< @:
< $allstitr
< @;
< $index
< @:
< $integer
< @;
< $lst
< @:
< $abslist
< @)
< @:
< $allstitr
< @;
< begin
< $self
< @.
< $cursor
< @:=
< $index
< @;
< $self
< @.
< $lastret
< @:=
< @-
< #1
< @;
< $self
< @.
< $thelist
< @:=
< $lst
< @;
< $alliinit
< @:=
< $self
< @;
< end
< @;
< function
< $allihasnext
< @(
< $self
< @:
< $allstitr
< @)
< @:
< $boolean
< @;
< begin
< $allihasnext
< @:=
< @(
< $self
< @.
< $cursor
< @<>
< $self
< @.
< $thelist
< @.
< $size
< @)
< @;
< end
< @;
< function
< $allinext
< @(
< $self
< @:
< $allstitr
< @)
< @:
< $root
< @;
< begin
< if
< $self
< @.
< $cursor
< @>=
< $self
< @.
< $thelist
< @.
< $size
< then
< begin
< $allinext
< @:=
< nil
< @;
< end
< else
< begin
< $allinext
< @:=
< $self
< @.
< $thelist
< @.
< $getith
< @(
< $self
< @.
< $cursor
< @)
< @;
< $self
< @.
< $lastret
< @:=
< $self
< @.
< $cursor
< @;
< $self
< @.
< $cursor
< @:=
< $self
< @.
< $cursor
< @+
< #1
< @;
< end
< @;
< end
< @;
< function
< $allinextindex
< @(
< $self
< @:
< $allstitr
< @)
< @:
< $integer
< @;
< begin
< $allinextindex
< @:=
< $self
< @.
< $cursor
< @;
< end
< @;
< function
< $allihasprevious
< @(
< $self
< @:
< $allstitr
< @)
< @:
< $boolean
< @;
< begin
< $allihasprevious
< @:=
< @(
< $self
< @.
< $cursor
< @<>
< #0
< @)
< @;
< end
< @;
< function
< $alliprevious
< @(
< $self
< @:
< $allstitr
< @)
< @:
< $root
< @;
< begin
< if
< $self
< @.
< $cursor
< @<=
< #0
< then
< begin
< $alliprevious
< @:=
< nil
< @;
< end
< else
< begin
< $self
< @.
< $cursor
< @:=
< $self
< @.
< $cursor
< @-
< #1
< @;
< $self
< @.
< $lastret
< @:=
< $self
< @.
< $cursor
< @;
< $alliprevious
< @:=
< $self
< @.
< $thelist
< @.
< $getith
< @(
< $self
< @.
< $cursor
< @)
< @;
< end
< @;
< end
< @;
< function
< $allipreviousindex
< @(
< $self
< @:
< $allstitr
< @)
< @:
< $integer
< @;
< begin
< $allipreviousindex
< @:=
< $self
< @.
< $cursor
< @-
< #1
< @;
< end
< @;
< procedure
< $alliset
< @(
< $self
< @:
< $allstitr
< @;
< $o
< @:
< $hasequals
< @)
< @;
< var
< $oo
< @:
< $hasequals
< @;
< begin
< if
< $self
< @.
< $lastret
< @>=
< #0
< then
< begin
< $oo
< @:=
< $self
< @.
< $thelist
< @.
< $setith
< @(
< $self
< @.
< $lastret
< @,
< $o
< @)
< @;
< end
< @;
< end
< @;
< procedure
< $alliadd
< @(
< $self
< @:
< $allstitr
< @;
< $o
< @:
< $hasequals
< @)
< @;
< var
< $b
< @:
< $boolean
< @;
< begin
< if
< @(
< $self
< @.
< $cursor
< @>=
< #0
< @)
< and
< @(
< $self
< @.
< $cursor
< @<=
< $self
< @.
< $thelist
< @.
< $size
< @)
< then
< begin
< $b
< @:=
< $self
< @.
< $thelist
< @.
< $addith
< @(
< $self
< @.
< $cursor
< @,
< $o
< @)
< @;
< $self
< @.
< $lastret
< @:=
< @-
< #1
< @;
< $self
< @.
< $cursor
< @:=
< $self
< @.
< $cursor
< @+
< #1
< @;
< end
< @;
< end
< @;
< procedure
< $alliremove
< @(
< $self
< @:
< $allstitr
< @)
< @;
< var
< $oo
< @:
< $hasequals
< @;
< $b
< @:
< $boolean
< @;
< begin
< if
< $self
< @.
< $lastret
< @>=
< #0
< then
< begin
< $b
< @:=
< $self
< @.
< $thelist
< @.
< $removeith
< @(
< $self
< @.
< $lastret
< @)
< @;
< if
< $self
< @.
< $lastret
< @<
< $self
< @.
< $cursor
< then
< begin
< $self
< @.
< $cursor
< @:=
< $self
< @.
< $cursor
< @-
< #1
< @;
< end
< @;
< $self
< @.
< $lastret
< @:=
< @-
< #1
< @;
< end
< @;
< end
< @;
< type
< $llentry
< @=
< object
< $element
< @:
< $hasequals
< @;
< $next
< @:
< $llentry
< @;
< $previous
< @:
< $llentry
< @;
< methods
< function
< $init
< @(
< $self
< @:
< $llentry
< @;
< $element
< @:
< $hasequals
< @;
< $next
< @,
< $previous
< @:
< $llentry
< @)
< @:
< $llentry
< @=
< $lleinit
< @;
< end
< @;
< $linkedlist
< @=
< $abslist
< object
< $header
< @:
< $llentry
< @;
< $mysize
< @:
< $integer
< @;
< methods
< function
< $init
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $linkedlist
< @=
< $llinit
< @;
< function
< $getfirst
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $hasequals
< @=
< $llgetfirst
< @;
< function
< $getlast
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $hasequals
< @=
< $llgetlast
< @;
< function
< $removefirst
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $hasequals
< @=
< $llremovefirst
< @;
< function
< $removelast
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $hasequals
< @=
< $llremovelast
< @;
< function
< $removeentry
< @(
< $self
< @:
< $linkedlist
< @;
< $entry
< @:
< $llentry
< @)
< @:
< $hasequals
< @=
< $llremoveentry
< @;
< procedure
< $addfirst
< @(
< $self
< @:
< $linkedlist
< @)
< @=
< $lladdfirst
< @;
< procedure
< $addlast
< @(
< $self
< @:
< $linkedlist
< @)
< @=
< $lladdlast
< @;
< procedure
< $addbeforeentry
< @(
< $self
< @:
< $linkedlist
< @;
< $e
< @:
< $hasequals
< @;
< $entry
< @:
< $llentry
< @)
< @=
< $lladdbeforeentry
< @;
< function
< $entryith
< @(
< $self
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @)
< @:
< $llentry
< @=
< $llentryith
< @;
< overrides
< $contains
< @=
< $llcontains
< @;
< $size
< @=
< $llsize
< @;
< $add
< @=
< $lladd
< @;
< $remove
< @=
< $llremove
< @;
< $addall
< @=
< $lladdall
< @;
< $addallith
< @=
< $lladdallith
< @;
< $clear
< @=
< $llclear
< @;
< $getith
< @=
< $llgetith
< @;
< $setith
< @=
< $llsetith
< @;
< $addith
< @=
< $lladdith
< @;
< $removeith
< @=
< $llremoveith
< @;
< $indexof
< @=
< $llindexof
< @;
< $lastindexof
< @=
< $lllastindexof
< @;
< $getlistiteratorith
< @=
< $llgetlistiteratorith
< @;
< end
< @;
< $lllstitr
< @=
< $listiterator
< object
< $lastreturned
< @:
< $llentry
< @;
< $nextent
< @:
< $llentry
< @;
< $nextidx
< @:
< $integer
< @;
< $thelist
< @:
< $linkedlist
< @;
< methods
< function
< $init
< @(
< $self
< @:
< $lllstitr
< @;
< $lst
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @)
< @:
< $lllstitr
< @=
< $llliinit
< @;
< overrides
< $hasnext
< @=
< $lllihasnext
< @;
< $next
< @=
< $lllinext
< @;
< $nextindex
< @=
< $lllinextindex
< @;
< $hasprevious
< @=
< $lllihasprevious
< @;
< $previous
< @=
< $llliprevious
< @;
< $previousindex
< @=
< $lllipreviousindex
< @;
< $remove
< @=
< $llliremove
< @;
< $set
< @=
< $llliset
< @;
< $add
< @=
< $llliadd
< @;
< end
< @;
< function
< $lleinit
< @(
< $self
< @:
< $llentry
< @;
< $element
< @:
< $hasequals
< @;
< $next
< @,
< $previous
< @:
< $llentry
< @)
< @:
< $llentry
< @;
< begin
< $self
< @.
< $element
< @:=
< $element
< @;
< $self
< @.
< $next
< @:=
< $next
< @;
< $self
< @.
< $previous
< @:=
< $previous
< @;
< $lleinit
< @:=
< $self
< @;
< end
< @;
< function
< $llinit
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $linkedlist
< @;
< begin
< $self
< @.
< $header
< @:=
< $new
< @(
< $llentry
< @)
< @.
< $init
< @(
< nil
< @,
< nil
< @,
< nil
< @)
< @;
< $self
< @.
< $header
< @.
< $next
< @:=
< $self
< @.
< $header
< @;
< $self
< @.
< $header
< @.
< $previous
< @:=
< $self
< @.
< $header
< @;
< $self
< @.
< $size
< @:=
< #0
< @;
< $llinit
< @:=
< $self
< @;
< end
< @;
< function
< $llgetfirst
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $hasequals
< @;
< begin
< if
< $self
< @.
< $size
< @=
< #0
< then
< begin
< $llgetfirst
< @:=
< nil
< @;
< end
< else
< begin
< $llgetfirst
< @:=
< $self
< @.
< $header
< @.
< $next
< @.
< $element
< @;
< end
< @;
< end
< @;
< function
< $llgetlast
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $hasequals
< @;
< begin
< if
< $self
< @.
< $size
< @=
< #0
< then
< begin
< $llgetlast
< @:=
< nil
< @;
< end
< else
< begin
< $llgetlast
< @:=
< $self
< @.
< $header
< @.
< $previous
< @.
< $element
< @;
< end
< @;
< end
< @;
< function
< $llremovefirst
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $hasequals
< @;
< begin
< $llremovefirst
< @:=
< $self
< @.
< $removeentry
< @(
< $self
< @.
< $header
< @.
< $next
< @)
< @;
< end
< @;
< function
< $llremovelast
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $hasequals
< @;
< begin
< $llremovelast
< @:=
< $self
< @.
< $removeentry
< @(
< $self
< @.
< $header
< @.
< $previous
< @)
< @;
< end
< @;
< procedure
< $lladdfirst
< @(
< $self
< @:
< $linkedlist
< @;
< $e
< @:
< $hasequals
< @)
< @;
< begin
< $self
< @.
< $addbeforeentry
< @(
< $e
< @,
< $self
< @.
< $header
< @.
< $next
< @)
< @;
< end
< @;
< procedure
< $lladdlast
< @(
< $self
< @:
< $linkedlist
< @;
< $e
< @:
< $hasequals
< @)
< @;
< begin
< $self
< @.
< $addbeforeentry
< @(
< $e
< @,
< $self
< @.
< $header
< @)
< @;
< end
< @;
< function
< $llcontains
< @(
< $self
< @:
< $linkedlist
< @;
< $e
< @:
< $hasequals
< @)
< @:
< $boolean
< @;
< begin
< $llcontains
< @:=
< @(
< $self
< @.
< $indexof
< @(
< $e
< @)
< @<>
< @-
< #1
< @)
< @;
< end
< @;
< function
< $llsize
< @(
< $self
< @:
< $linkedlist
< @)
< @:
< $integer
< @;
< begin
< $llsize
< @:=
< $self
< @.
< $mysize
< @;
< end
< @;
< function
< $lladd
< @(
< $self
< @:
< $linkedlist
< @;
< $e
< @:
< $hasequals
< @)
< @:
< $boolean
< @;
< begin
< $self
< @.
< $addbeforeentry
< @(
< $e
< @,
< $self
< @.
< $header
< @)
< @;
< $lladd
< @:=
< $true
< @;
< end
< @;
< function
< $llremove
< @(
< $self
< @:
< $linkedlist
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $boolean
< @;
< var
< $e
< @:
< $llentry
< @;
< $searching
< @:
< $boolean
< @;
< $oo
< @:
< $hasequals
< @;
< begin
< $llremove
< @:=
< $false
< @;
< $searching
< @:=
< $true
< @;
< $e
< @:=
< $self
< @.
< $header
< @.
< $next
< @;
< while
< $searching
< do
< begin
< if
< $e
< @<>
< $self
< @.
< $header
< then
< begin
< if
< $o
< @.
< $equals
< @(
< $e
< @.
< $element
< @)
< then
< begin
< $oo
< @:=
< $self
< @.
< $removeentry
< @(
< $e
< @)
< @;
< $llremove
< @:=
< $true
< @;
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< else
< begin
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $lladdall
< @(
< $self
< @:
< $linkedlist
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @;
< begin
< $lladdall
< @:=
< $self
< @.
< $addallith
< @(
< $self
< @.
< $size
< @,
< $other
< @)
< @;
< end
< @;
< function
< $lladdallith
< @(
< $self
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @;
< $other
< @:
< $collection
< @)
< @:
< $boolean
< @;
< var
< $it
< @:
< $iterator
< @;
< $succ
< @:
< $llentry
< @;
< $pred
< @:
< $llentry
< @;
< $o
< @:
< $hasequals
< @;
< $newent
< @:
< $llentry
< @;
< begin
< $lladdallith
< @:=
< $false
< @;
< if
< @(
< $index
< @>=
< #0
< @)
< and
< @(
< $index
< @<=
< $self
< @.
< $size
< @)
< then
< begin
< $it
< @:=
< $other
< @.
< $getiterator
< @;
< if
< $index
< @=
< $self
< @.
< $size
< then
< begin
< $succ
< @:=
< $self
< @.
< $header
< @;
< end
< else
< begin
< $succ
< @:=
< $self
< @.
< $entryith
< @(
< $index
< @)
< @;
< end
< @;
< $pred
< @:=
< $succ
< @.
< $previous
< @;
< while
< $it
< @.
< $hasnext
< do
< begin
< $o
< @:=
< $narrow
< @(
< $it
< @.
< $next
< @,
< $hasequals
< @)
< @;
< $newent
< @:=
< $new
< @(
< $llentry
< @)
< @.
< $init
< @(
< $o
< @,
< $succ
< @,
< $pred
< @)
< @;
< $pred
< @.
< $next
< @:=
< $newent
< @;
< $pred
< @:=
< $newent
< @;
< $self
< @.
< $mysize
< @:=
< $self
< @.
< $mysize
< @+
< #1
< @;
< end
< @;
< $succ
< @.
< $previous
< @:=
< $pred
< @;
< $lladdallith
< @:=
< $true
< @;
< end
< @;
< end
< @;
< procedure
< $llclear
< @(
< $self
< @:
< $linkedlist
< @)
< @;
< var
< $e
< @,
< $next
< @:
< $llentry
< @;
< begin
< $e
< @:=
< $self
< @.
< $header
< @.
< $next
< @;
< while
< $e
< @<>
< $self
< @.
< $header
< do
< begin
< $next
< @:=
< $e
< @.
< $next
< @;
< $e
< @.
< $next
< @:=
< nil
< @;
< $e
< @.
< $previous
< @:=
< nil
< @;
< $e
< @:=
< $next
< @;
< end
< @;
< $self
< @.
< $header
< @.
< $next
< @:=
< $self
< @.
< $header
< @;
< $self
< @.
< $header
< @.
< $previous
< @:=
< $self
< @.
< $header
< @;
< $self
< @.
< $mysize
< @:=
< #0
< @;
< end
< @;
< function
< $llgetith
< @(
< $self
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @)
< @:
< $hasequals
< @;
< begin
< $llgetith
< @:=
< $self
< @.
< $entryith
< @(
< $index
< @)
< @.
< $element
< @;
< end
< @;
< function
< $llsetith
< @(
< $self
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @;
< $element
< @:
< $hasequals
< @)
< @:
< $hasequals
< @;
< var
< $e
< @:
< $llentry
< @;
< begin
< $llsetith
< @:=
< nil
< @;
< $e
< @:=
< $self
< @.
< $entryith
< @(
< $index
< @)
< @;
< if
< $e
< @<>
< nil
< then
< begin
< $llsetith
< @:=
< $e
< @.
< $element
< @;
< $e
< @.
< $element
< @:=
< $element
< @;
< end
< @;
< end
< @;
< function
< $lladdith
< @(
< $self
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @;
< $element
< @:
< $hasequals
< @)
< @:
< $boolean
< @;
< var
< $e
< @:
< $llentry
< @;
< begin
< if
< $index
< @=
< $self
< @.
< $size
< then
< begin
< $e
< @:=
< $self
< @.
< $header
< @;
< end
< else
< begin
< $e
< @:=
< $self
< @.
< $entryith
< @(
< $index
< @)
< @;
< end
< @;
< $self
< @.
< $addbeforeentry
< @(
< $element
< @,
< $e
< @)
< @;
< $lladdith
< @:=
< $true
< @;
< end
< @;
< function
< $llremoveith
< @(
< $self
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @)
< @:
< $boolean
< @;
< var
< $oo
< @:
< $hasequals
< @;
< begin
< $oo
< @:=
< $self
< @.
< $removeentry
< @(
< $self
< @.
< $entryith
< @(
< $index
< @)
< @)
< @;
< $llremoveith
< @:=
< $true
< @;
< end
< @;
< function
< $llentryith
< @(
< $self
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @)
< @:
< $llentry
< @;
< var
< $e
< @:
< $llentry
< @;
< begin
< $llentryith
< @:=
< nil
< @;
< if
< @(
< $index
< @>=
< #0
< @)
< and
< @(
< $index
< @<
< $self
< @.
< $size
< @)
< then
< begin
< $e
< @:=
< $self
< @.
< $header
< @.
< $next
< @;
< while
< $index
< @>
< #0
< do
< begin
< $e
< @:=
< $e
< @.
< $next
< @;
< $index
< @:=
< $index
< @-
< #1
< @;
< end
< @;
< $llentryith
< @:=
< $e
< @;
< end
< @;
< end
< @;
< function
< $llindexof
< @(
< $self
< @:
< $linkedlist
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $integer
< @;
< var
< $index
< @:
< $integer
< @;
< $e
< @:
< $llentry
< @;
< $searching
< @:
< $boolean
< @;
< begin
< $llindexof
< @:=
< @-
< #1
< @;
< $index
< @:=
< #0
< @;
< $e
< @:=
< $self
< @.
< $header
< @.
< $next
< @;
< $searching
< @:=
< $true
< @;
< while
< $searching
< do
< begin
< if
< $e
< @<>
< $self
< @.
< $header
< then
< begin
< if
< $o
< @.
< $equals
< @(
< $e
< @.
< $element
< @)
< then
< begin
< $llindexof
< @:=
< $index
< @;
< $searching
< @:=
< $false
< @;
< end
< else
< begin
< $index
< @:=
< $index
< @+
< #1
< @;
< $e
< @:=
< $e
< @.
< $next
< @;
< end
< @;
< end
< else
< begin
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $lllastindexof
< @(
< $self
< @:
< $linkedlist
< @;
< $o
< @:
< $hasequals
< @)
< @:
< $integer
< @;
< var
< $index
< @:
< $integer
< @;
< $e
< @:
< $llentry
< @;
< $searching
< @:
< $boolean
< @;
< begin
< $lllastindexof
< @:=
< @-
< #1
< @;
< $index
< @:=
< $self
< @.
< $size
< @;
< $e
< @:=
< $self
< @.
< $header
< @.
< $previous
< @;
< $searching
< @:=
< $true
< @;
< while
< $searching
< do
< begin
< if
< $e
< @<>
< $self
< @.
< $header
< then
< begin
< $index
< @:=
< $index
< @-
< #1
< @;
< if
< $o
< @.
< $equals
< @(
< $e
< @.
< $element
< @)
< then
< begin
< $lllastindexof
< @:=
< $index
< @;
< $searching
< @:=
< $false
< @;
< end
< else
< begin
< $e
< @:=
< $e
< @.
< $previous
< @;
< end
< @;
< end
< else
< begin
< $searching
< @:=
< $false
< @;
< end
< @;
< end
< @;
< end
< @;
< procedure
< $lladdbeforeentry
< @(
< $self
< @:
< $linkedlist
< @;
< $e
< @:
< $hasequals
< @;
< $entry
< @:
< $llentry
< @)
< @;
< var
< $newent
< @:
< $llentry
< @;
< begin
< $newent
< @:=
< $new
< @(
< $llentry
< @)
< @.
< $init
< @(
< $e
< @,
< $entry
< @,
< $entry
< @.
< $previous
< @)
< @;
< $newent
< @.
< $previous
< @.
< $next
< @:=
< $newent
< @;
< $newent
< @.
< $next
< @.
< $previous
< @:=
< $newent
< @;
< $self
< @.
< $mysize
< @:=
< $self
< @.
< $mysize
< @+
< #1
< @;
< end
< @;
< function
< $llremoveentry
< @(
< $self
< @:
< $linkedlist
< @;
< $e
< @:
< $llentry
< @)
< @:
< $hasequals
< @;
< begin
< $llremoveentry
< @:=
< nil
< @;
< if
< @(
< $e
< @<>
< $self
< @.
< $header
< @)
< and
< @(
< $e
< @<>
< nil
< @)
< then
< begin
< $llremoveentry
< @:=
< $e
< @.
< $element
< @;
< $e
< @.
< $previous
< @.
< $next
< @:=
< $e
< @.
< $next
< @;
< $e
< @.
< $next
< @.
< $previous
< @:=
< $e
< @.
< $previous
< @;
< $e
< @.
< $previous
< @:=
< nil
< @;
< $e
< @.
< $next
< @:=
< nil
< @;
< $e
< @.
< $element
< @:=
< nil
< @;
< $self
< @.
< $mysize
< @:=
< $self
< @.
< $mysize
< @-
< #1
< @;
< end
< @;
< end
< @;
< function
< $llgetlistiteratorith
< @(
< $self
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @)
< @:
< $listiterator
< @;
< begin
< $llgetlistiteratorith
< @:=
< $new
< @(
< $lllstitr
< @)
< @.
< $init
< @(
< $self
< @,
< $index
< @)
< @;
< end
< @;
< function
< $llliinit
< @(
< $self
< @:
< $lllstitr
< @;
< $lst
< @:
< $linkedlist
< @;
< $index
< @:
< $integer
< @)
< @:
< $lllstitr
< @;
< begin
< $self
< @.
< $lastreturned
< @:=
< $lst
< @.
< $header
< @;
< $self
< @.
< $thelist
< @:=
< $lst
< @;
< if
< @(
< $index
< @>=
< #0
< @)
< and
< @(
< $index
< @<=
< $lst
< @.
< $size
< @)
< then
< begin
< $self
< @.
< $nextent
< @:=
< $self
< @.
< $thelist
< @.
< $header
< @.
< $next
< @;
< $self
< @.
< $nextidx
< @:=
< #0
< @;
< while
< $index
< @>
< #0
< do
< begin
< $self
< @.
< $nextent
< @:=
< $self
< @.
< $nextent
< @.
< $next
< @;
< $self
< @.
< $nextidx
< @:=
< $self
< @.
< $nextidx
< @+
< #1
< @;
< $index
< @:=
< $index
< @-
< #1
< @;
< end
< @;
< end
< @;
< end
< @;
< function
< $lllihasnext
< @(
< $self
< @:
< $lllstitr
< @)
< @:
< $boolean
< @;
< begin
< $lllihasnext
< @:=
< @(
< $self
< @.
< $nextidx
< @<>
< $self
< @.
< $thelist
< @.
< $size
< @)
< @;
< end
< @;
< function
< $lllinext
< @(
< $self
< @:
< $lllstitr
< @)
< @:
< $hasequals
< @;
< begin
< $lllinext
< @:=
< nil
< @;
< if
< $self
< @.
< $nextidx
< @<>
< $self
< @.
< $thelist
< @.
< $size
< then
< begin
< $self
< @.
< $lastreturned
< @:=
< $self
< @.
< $nextent
< @;
< $self
< @.
< $nextent
< @:=
< $self
< @.
< $nextent
< @.
< $next
< @;
< $self
< @.
< $nextidx
< @:=
< $self
< @.
< $nextidx
< @+
< #1
< @;
< $lllinext
< @:=
< $self
< @.
< $lastreturned
< @.
< $element
< @;
< end
< @;
< end
< @;
< function
< $lllinextindex
< @(
< $self
< @:
< $lllstitr
< @)
< @:
< $integer
< @;
< begin
< $lllinextindex
< @:=
< $self
< @.
< $nextidx
< @;
< end
< @;
< function
< $lllihasprevious
< @(
< $self
< @:
< $lllstitr
< @)
< @:
< $boolean
< @;
< begin
< $lllihasprevious
< @:=
< @(
< $self
< @.
< $nextidx
< @<>
< #0
< @)
< @;
< end
< @;
< function
< $llliprevious
< @(
< $self
< @:
< $lllstitr
< @)
< @:
< $hasequals
< @;
< begin
< $llliprevious
< @:=
< nil
< @;
< if
< $self
< @.
< $nextidx
< @<>
< #0
< then
< begin
< $self
< @.
< $lastreturned
< @:=
< $self
< @.
< $nextent
< @.
< $previous
< @;
< $self
< @.
< $nextent
< @:=
< $self
< @.
< $nextent
< @.
< $previous
< @;
< $self
< @.
< $nextidx
< @:=
< $self
< @.
< $nextidx
< @-
< #1
< @;
< $llliprevious
< @:=
< $self
< @.
< $lastreturned
< @.
< $element
< @;
< end
< @;
< end
< @;
< function
< $lllipreviousindex
< @(
< $self
< @:
< $lllstitr
< @)
< @:
< $integer
< @;
< begin
< $lllipreviousindex
< @:=
< $self
< @.
< $nextidx
< @-
< #1
< @;
< end
< @;
< procedure
< $llliremove
< @(
< $self
< @:
< $lllstitr
< @)
< @;
< var
< $lastnext
< @:
< $llentry
< @;
< $oo
< @:
< $hasequals
< @;
< begin
< $lastnext
< @:=
< $self
< @.
< $lastreturned
< @.
< $next
< @;
< $oo
< @:=
< $self
< @.
< $thelist
< @.
< $removeentry
< @(
< $self
< @.
< $lastreturned
< @)
< @;
< if
< $self
< @.
< $nextent
< @=
< $self
< @.
< $lastreturned
< then
< begin
< $self
< @.
< $nextent
< @:=
< $lastnext
< @;
< end
< else
< begin
< $self
< @.
< $nextidx
< @:=
< $self
< @.
< $nextidx
< @-
< #1
< @;
< end
< @;
< $self
< @.
< $lastreturned
< @:=
< $self
< @.
< $thelist
< @.
< $header
< @;
< end
< @;
< procedure
< $llliset
< @(
< $self
< @:
< $lllstitr
< @;
< $e
< @:
< $hasequals
< @)
< @;
< begin
< if
< $self
< @.
< $lastreturned
< @<>
< $self
< @.
< $thelist
< @.
< $header
< then
< begin
< $self
< @.
< $lastreturned
< @.
< $element
< @:=
< $e
< @;
< end
< @;
< end
< @;
< procedure
< $llliadd
< @(
< $self
< @:
< $lllstitr
< @;
< $e
< @:
< $hasequals
< @)
< @;
< begin
< $self
< @.
< $lastreturned
< @:=
< $self
< @.
< $thelist
< @.
< $header
< @;
< $self
< @.
< $thelist
< @.
< $addbeforeentry
< @(
< $e
< @,
< $self
< @.
< $nextent
< @)
< @;
< $self
< @.
< $nextidx
< @:=
< $self
< @.
< $nextidx
< @+
< #1
< @;
< end
< @;
< begin
< end
< @.
< EOF
< EOF
---
> $:= 


